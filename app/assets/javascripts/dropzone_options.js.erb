$('.uploads.new').ready(function () {

	// bind click functionality to future save button
	$(".dropzone").on("click.save", "#save-uploads", function() {
		$.each( url_location, function( key, url ) {
			var preview = file_preview[key];
			n = preview[0];
			var taglist = $(n).find(".tag-data");
			getTags(taglist);
		  tags = getTags(taglist.get());
		  var uploadId = $(n).find('[name="x-ignore-upload[id]"]').val();
	    $.ajax({
			    url: '/uploads/' + uploadId,
			    type: 'PUT',
			    dataType: "json",
			    data: { upload: { tag_list: tags } },
			    success: function(result) {
			    	console.log(result);
			    	var user_id = result["user_id"];
			      location.href = "/users/" + user_id;
			    }
				});	
	  });
	});

	//bind remove all functionality to future remove all button
  $(".dropzone").on("click", "#remove-all-uploads", function() {
  	dropzone.removeAllFiles(true);
  	url_location = {};
  	$("#save-uploads").prop("disabled", true);
  	$("#remove-all-uploads").prop("disabled", true);
  });

  $("#clickable").on("click", function(e) {
  	console.log("click");
  	e.preventDefault();
  })

  var i = 0;
	var url_location = {};
	var file_preview = {};
 	// disable auto discover
	Dropzone.autoDiscover = false;

 	var dropzone = new Dropzone( ".dropzone", {
		maxFilesize: 50, // Set the maximum file size to 50 MB
		maxThumbnailFilesize: 50,
		paramName: "file", // Rails expects the file upload to be something like model[field_name]
		addRemoveLinks: false, // Don't show remove links on dropzone itself.
		acceptedFiles: 'image/*',
		dictDefaultMessage: "Drag Images or Click Here to Upload",
		clickable: "#clickable",
		thumbnailHeight: 210,
		thumbnailWidth: null,
		previewTemplate: document.querySelector('#preview-template').innerHTML,
		previewsContainer: "#upload-previews"
	});

	dropzone.on("removedfile", function(file) {

	});

	// Update the total progress bar
	dropzone.on("totaluploadprogress", function(progress) {
	  $('.dz-upload').width = progress + "%";
	});

	dropzone.on("addedfile", function(file) {
		$("#upload-previews").removeClass("flex-container");
		$("#dropzone-upload-text").hide();
  	$("#uploader-controls").show();
  	$("#save-uploads").prop("disabled", true);
  	$("#remove-all-uploads").prop("disabled", false);
  	$("#uploader-container").removeClass("flex-container");
  	// Create the remove button
    var removeButton = Dropzone.createElement("<i class='dz-remove fa fa-minus-circle'></i>");
    removeButton.addEventListener("click", function(e) {
      // Remove the file preview.
      dropzone.removeFile(file);
    		var uploadId = $(this).parent().find('[name="x-ignore-upload[id]"]').val();
				$.ajax({
			    url: '/uploads/' + uploadId,
			    type: 'DELETE',
			    dataType: "script",
			    success: function(result) {
			        
			    }
				});
    });

    // Add the button to the file preview element.
    file.previewElement.appendChild(removeButton);
		file.id = i;
		file_preview[file.id] = $(file.previewElement);
  	file_preview[file.id].find(".dz-remove").attr("id", file.id);
		var file_tag_field = file_preview[file.id].find("#upload_tag_list");
		file_tag_field.attr("tabindex", file.id+1);
		formatTags(file_tag_field);
		i++;
	});

	dropzone.on("sending", function(file, xhr, formData) {
	  // Will send the content type along with the file as POST data.
	  formData.append("Content-Type", file.type);
	});

	dropzone.on("queuecomplete", function() {
  	$("#save-uploads").prop("disabled", false);
	});

  dropzone.on("success", function(file, responseText, event) {
  	var direct_url = $(responseText).find("location")[0];
  	var url = $(direct_url).text();
  	url_location[file.id] = url;

    $.ajax({
		    url: '/uploads',
		    type: 'POST',
		    data: {upload: {direct_upload_url: url}},
		    success: function(result) {
    	  	// Append the upload id as a hidden input
			  	// SO https://stackoverflow.com/questions/24592141/dropzonejs-with-rails-deleting-files-from-server
			  	var elem = document.createElement('input');
			  	elem.setAttribute("name", "x-ignore-upload[id]");
			  	elem.setAttribute("value", result["id"]);
			  	elem.setAttribute("type", "hidden");
			  	file.previewTemplate.appendChild(elem);
		    }
		});		
	});
});