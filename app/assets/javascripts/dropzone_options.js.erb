var Uploader = function() {
  this.$dropzoneContainer = $(".dropzone");
  this.$uploaderContainer = $("#uploader-container");
  this.$previewsContainer = $("#upload-previews");

  this.$instructions = $("#dropzone-upload-text");
  this.$controls = $("#uploader-controls");
  this.$saveAllBtn = $("#save-uploads");
  this.$removeAllBtn = $("#remove-all-uploads");

  this.user = $("#uploader-container").data("userid");
  this.uploads = {};

  this.counter = 0;

  this.dropzone = new Dropzone(".dropzone", {
    maxFilesize: 50, // Set the maximum file size to 50 MB
    maxThumbnailFilesize: 50,
    paramName: "file", // Rails expects the file upload to be something like model[field_name]
    addRemoveLinks: false, // Don't show remove links on dropzone itself.
    acceptedFiles: 'image/*',
    dictDefaultMessage: "Drag Images or Click Here to Upload",
    clickable: "#clickable",
    thumbnailHeight: 210,
    thumbnailWidth: null,
    previewTemplate: document.querySelector('#preview-template').innerHTML,
    previewsContainer: "#upload-previews"
  });

  $("#clickable").on("click", function(e) {
    e.preventDefault();
  });

  this.bindHandlers();
};

Uploader.prototype.bindHandlers = function(){
  var self = this;

  self.dropzone.on("addedfile", function(file) {
    self.showDropzoneUI();
    self.generateUpload(file);
  });

  self.dropzone.on("thumbnail", function(file, dataURL) {
    self.uploads[file.id].thumbImg = dataURL;
  });

  self.dropzone.on("success", function(file, responseText, event){
    self.saveUpload(file, responseText, event);
  });

  self.dropzone.on("removedfile", function(file) {
    delete self.uploads[file.id];
  });

  self.$dropzoneContainer.on("click.save", "#save-uploads", function(){
    self.saveAllUploads();
  });

  self.$dropzoneContainer.on("click.removeAll", "#remove-all-uploads", function() {
    self.removeAllUploads();
  });

  self.dropzone.on("sending", function(file, xhr, formData) {
  // Will send the content type along with the file as POST data.
    formData.append("Content-Type", file.type);
  });

  self.dropzone.on("queuecomplete", function() {

    window.setInterval(function(){

      if (self.uploads.doneSaving === true) {
        self.$saveAllBtn.prop("disabled", false);
      }
    }, 1000);

  });

};

Uploader.prototype.showDropzoneUI = function(){
  var self = this;

  self.$previewsContainer.removeClass("flex-container");
  self.$uploaderContainer.removeClass("flex-container");
  self.$instructions.hide();
  self.$controls.show();
  self.$saveAllBtn.prop("disabled", true);
  self.$removeAllBtn.prop("disabled", false);
};

Uploader.prototype.generateUpload = function(){
  var self = this;

  file.id = self.counter;
  self.counter++;

  self.uploads[file.id] = {
    file: file,
    $preview: $(file.previewElement),
  };

  self.generateRemoveIcon(file);
  self.setTaggingTabIndex(file);

};

Uploader.prototype.generateRemoveIcon = function(file) {
  var self = this;

  var removeBtn = Dropzone.createElement("<i class='dz-remove fa fa-minus-circle'></i>");
  file.previewElement.appendChild(removeBtn);

  removeBtn.addEventListener("click", function() {
    self.removeUpload(file, this);
  });
};

Uploader.prototype.generateUpload = function(file) {
  var self = this;

  file.id = self.counter;
  self.counter++;

  self.uploads[file.id] = {
    file: file,
    $preview: $(file.previewElement),
  };

  self.generateRemoveIcon(file);
  self.setTaggingTabIndex(file);

};

Uploader.prototype.generateRemoveIcon = function(file) {
  var self = this;

  var removeBtn = Dropzone.createElement("<i class='dz-remove fa fa-minus-circle'></i>");
  file.previewElement.appendChild(removeBtn);

  removeBtn.addEventListener("click", function() {
    self.removeUpload(file, this);
  });
};

Uploader.prototype.setTaggingTabIndex = function(file) {
  var self = this;

  var uploadPreview = self.uploads[file.id].$preview;

  uploadPreview.find(".dz-remove").attr("id", file.id);

  var uploadTagField = uploadPreview.find("#upload_tag_list");
  uploadTagField.attr("tabindex", file.id + 1);
};

Uploader.prototype.removeUpload = function(file, removeBtn) {
  var self = this;

  //delete model from Database
  self.deleteFile(file);
  //remove from Dropzone instance
  self.dropzone.removeFile(file);
};

Uploader.prototype.deleteFile = function(file) {
  var self = this;

  if ( self.uploads[file.id].databaseID ) {
    $.ajax({
      url: "/uploads/" + self.uploads[file.id].databaseID,
      type: "DELETE",
      dataType: "script",
      success: function(result) {
        delete self.uploads[file.id];
      },
    });
  }
};

Uploader.prototype.saveUpload = function(file, responseText, event) {
  var self = this;

  var upload = self.uploads[file.id];
  upload.url = $(responseText).find("location").text();

  var savingOverlay = upload.$preview.find(".overlay");
  var deleteIcon = upload.$preview.find(".dz-remove");
  var tagForm = upload.$preview.find("#dropzone-upload-tags");

  self.$saveAllBtn.prop("disabled", true);
  savingOverlay.removeClass("hidden");
  deleteIcon.addClass("hidden");

  $.ajax({
    url: '/uploads',
    type: 'POST',
    dataType: "json",
    data: { upload: { direct_upload_url: upload.url, dz_thumb: upload.thumbImg } },
    success: function(result) {
      upload.databaseID = result["id"];
      upload.$preview.data("id", upload.databaseID);
      self.uploads.doneSaving = true;
      savingOverlay.addClass("hidden");;
      tagForm.removeClass("hidden");
      self.tagsEditor = new TagsEditor(upload.$preview);
      self.tagsEditor.makeEditable();
      deleteIcon.removeClass("hidden");
    },
    error: function(result) {
      savingOverlay.find("p").text("error - please try again");
      delete upload;
    }
  });
};

Uploader.prototype.saveAllUploads = function() {
  var self = this;

  $("#fullscreen-overlay").find("p").text("saving...");
  $("#fullscreen-overlay").removeClass("hidden");
  window.location.replace("/users/" + self.user);

};

Uploader.prototype.removeAllUploads = function() {
  var self = this;

  $("#fullscreen-overlay").find("p").text("deleting...");
  $("#fullscreen-overlay").removeClass("hidden");
  self.uploads.forEach(function( el, i, arr ){
    var upload = el;

    if ( upload.databaseID ) {
      $.ajax({
        url: "/uploads/" + upload.databaseID,
        type: "DELETE",
        dataType: "script",
        success: function(){
          self.dropzone.removeAllFiles(true);
          self.$saveAllBtn.prop("disabled", true);
          self.$removeAllBtn.prop("disabled", true);
          self.uploads = [];
          if ( i === arr.length - 1 ) {
            $("#fullscreen-overlay").addClass("hidden");
          }
        }
      });
    } else {
      if ( i === arr.length - 1 ) {
        $("#fullscreen-overlay").addClass("hidden");
        self.uploads = [];
        self.$saveAllBtn.prop("disabled", true);
        self.$removeAllBtn.prop("disabled", true);
        self.dropzone.removeAllFiles(true);
      }
    }

  });
};

$('.uploads.new').ready(function () {

  // disable auto discover
  Dropzone.autoDiscover = false;

  new Uploader();

});
